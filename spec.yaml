openapi: 3.0.0
info:
  version: 1.0.0
  title: Restful DCP API Documentation
servers:
  - url: http://bestia.office.distributive.network/api/
  - url: http://rhea.office.distributive.network/api/
paths:
  /job:
    post:
      summary: Job - Deploy 
      description: Deploys a job to the DCP scheduler for computation. Only required fields are <work> and <account>. Currently supported languages are JavaScript and TypeScript, but more are coming soon!
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                work:
                  type: object
                  properties:
                    language:
                      type: string
                      enum: ['JavaScript', 'TypeScript']
                    function:
                      type: string
                  required:
                    - language
                    - function
                account:
                  type: object
                  properties:
                    address:
                      type: string
                    password:
                      type: string
                  required:
                    - address
                slices:
                  oneOf:
                    - type: array
                      items:
                        type: object
                        additionalProperties: true
                    - type: object
                      properties:
                        remoteDataSet:
                          type: array
                          items:
                            type: string
                args:
                  type: array
                  items:
                    type: string
                  description: extra parameters to pass to the workfunction's arguments. Added to the end of the arguments to call the work function
                computeGroups:
                  type: array
                  items:
                    type: object
                    properties:
                      joinKey:
                        type: string
                      joinSecret:
                        type: string
                slicePaymentOffer:
                  type: string
                  description: which is a decimal number or MARKET_VALUE
                requirements:
                  type: object
                  description: An object that describes the requirements a worker must have to be eligible for the job.
                packages:
                  type: array
                  items:
                    type: string
                  description: list of packages to use for this job
                public:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    link:
                      type: string
      responses:
        201:
          description: The job has been created. This will return a JobId handle for other requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: string
        400:
          description: Bad request. Invalid input or missing required properties.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A detailed error message.
        401:
          description: Unauthorized. Missing or invalid authentication token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A detailed error message.
        403:
          description: Forbidden. You do not have permission to access this resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A detailed error message.
        500:
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: A detailed error message.
  /job/{jobId}/slices:
    post:
      summary: Job - Add Slices
      description: Adds slices to a running job.
      responses:
        201:
          description: Successfully added slices.
        '404':
          description: Job not found.

  /job/{jobId}/result:
    get:
      summary: Job - Results
      description: Retrieves the results that have been completed so far.
      responses:
        200:
          description: Successfully retrieved job result.
          content:
            application/json:
              schema:
                type: object
                properties:
                    results:
                        type: array
                        items: 
                          type: object
                          properties:
                            sliceNumber:
                                type: integer
                            value:
                                type: object
                    totalSlices:
                        type: integer
                    completedSlices:
                        type: integer
                    activeSlices:
                        type: integer
        '404':
          description: Job not found.
  /job/{jobId}:
    get:
      summary: Job - Status 
      description: Retrieves the status of a specific job.
      responses:
        '200':
          description: Successfully retrieved job status.
          content:
            application/json:
              schema:
                type: object
                properties:
                    status:
                        type: string
                        description: Current status of the job. (estimation, running, cancelled, corrupted, paused, completed).
                    totalSlices:
                        type: number
                        description: Total slices deployed so far.
                    activeSlices:
                        type: number
                        description: Current slices active.
                    completedSlices:
                        type: number
                        description: Slices completed so far.
                    totalCPUTime:
                        type: number
                        description: TODO 
                    totalGPUTime:
                        type: number
                        description: TODO
        '404':
          description: Job not found.
    delete:
      summary: Job - Cancel
      description: Cancels a running job, no more slices will be computed
      responses:
        204:
          description: Successfully cancelled job.
        '404':
          description: Job not found.
  /accounts:
    get:
      summary: User - List Bank Accounts 
      description: Retrieves a list of bank accounts associated with the user.
      responses:
        '200':
          description: Successfully retrieved bank accounts. 
          content:
            application/json:
              schema:
                type: object
                properties:
                    name:
                        type: string
                        description: Name given to the banka ccount.
                    address:
                        type: string
                        description: Hex address for the bank account, use this when deploying jobs.
                    balance:
                        type: string 
                        description: The current balance in DCCs.
        '404':
          description: No user found.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []

